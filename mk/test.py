# -*- coding:utf-8 -*-

from scipy.integrate import odeint
import numpy as np
import matplotlib.pyplot as plt
from scipy import constants as C
import math

def solver(w, t):
	Hq, NHq, NH3q, q, Nq, NH2q= w
	return [
		
-(+8.726648301750337e-11*Nq*Hq-2.636073496496994e-13*NHq*q-2.6360734965013396e-13*NHq*Hq+2.636073496496994e-13*NH2q*q)
-(+2.636073496496994e-13*NH2q*Hq-2.636073496496994e-13*NH3q*q-0.00038821677744313405*NH3q+0.12851808897140082*q*0.01)
-(-0.12851808897140082*0.66*q*q+1.1726930231733366e-06*Hq*Hq-0.12851808897140082*0.66*q*q+1.1726930231733366e-06*Hq*Hq-2.636073496496994e-13*0.33*q*q+2.405346222197613e-18*Nq*Nq-2.636073496496994e-13*0.33*q*q+2.405346222197613e-18*Nq*Nq+8.726648301750337e-11*Nq*Hq-2.636073496496994e-13*NHq*q+2.6360734965013396e-13*NHq*Hq-2.636073496496994e-13*NH2q*q+2.636073496496994e-13*NH2q*Hq-2.636073496496994e-13*NH3q*q+0.00038821677744313405*NH3q-0.12851808897140082*q*0.01)
-(+2.636073496496994e-13*0.33*q*q-2.405346222197613e-18*Nq*Nq+2.636073496496994e-13*0.33*q*q-2.405346222197613e-18*Nq*Nq-8.726648301750337e-11*Nq*Hq+2.636073496496994e-13*NHq*q)
-(+2.6360734965013396e-13*NHq*Hq-2.636073496496994e-13*NH2q*q-2.636073496496994e-13*NH2q*Hq+2.636073496496994e-13*NH3q*q)
,		
+8.726648301750337e-11*Nq*Hq-2.636073496496994e-13*NHq*q-2.6360734965013396e-13*NHq*Hq+2.636073496496994e-13*NH2q*q
,		
+2.636073496496994e-13*NH2q*Hq-2.636073496496994e-13*NH3q*q-0.00038821677744313405*NH3q+0.12851808897140082*q*0.01
,		
-0.12851808897140082*0.66*q*q+1.1726930231733366e-06*Hq*Hq-0.12851808897140082*0.66*q*q+1.1726930231733366e-06*Hq*Hq-2.636073496496994e-13*0.33*q*q+2.405346222197613e-18*Nq*Nq-2.636073496496994e-13*0.33*q*q+2.405346222197613e-18*Nq*Nq+8.726648301750337e-11*Nq*Hq-2.636073496496994e-13*NHq*q+2.6360734965013396e-13*NHq*Hq-2.636073496496994e-13*NH2q*q+2.636073496496994e-13*NH2q*Hq-2.636073496496994e-13*NH3q*q+0.00038821677744313405*NH3q-0.12851808897140082*q*0.01
,		
+2.636073496496994e-13*0.33*q*q-2.405346222197613e-18*Nq*Nq+2.636073496496994e-13*0.33*q*q-2.405346222197613e-18*Nq*Nq-8.726648301750337e-11*Nq*Hq+2.636073496496994e-13*NHq*q
,		
+2.6360734965013396e-13*NHq*Hq-2.636073496496994e-13*NH2q*q-2.636073496496994e-13*NH2q*Hq+2.636073496496994e-13*NH3q*q
,		]
t = np.logspace(-20., 15., 1000001)
track = odeint(solver, [0.0,0.0,0.0,1.0,0.0,0.0], t)
print(track)
conlist = []
for i in track[-1]:
	conlist.append(i)
Hq, NHq, NH3q, q, Nq, NH2q= conlist


print(+0.12851808897140082*0.66*q*q-1.1726930231733366e-06*Hq*Hq)

print(+2.636073496496994e-13*0.33*q*q-2.405346222197613e-18*Nq*Nq)

print(+8.726648301750337e-11*Nq*Hq-2.636073496496994e-13*NHq*q)

print(+2.6360734965013396e-13*NHq*Hq-2.636073496496994e-13*NH2q*q)

print(+2.636073496496994e-13*NH2q*Hq-2.636073496496994e-13*NH3q*q)

print(+0.00038821677744313405*NH3q-0.12851808897140082*q*0.01)
print(conlist)
plt.plot(t, track[:, 0], 'b', label="H*")
plt.plot(t, track[:, 1], 'g', label="NH*")
plt.plot(t, track[:, 2], 'r', label="NH3*")
plt.plot(t, track[:, 3], 'c', label="*")
plt.plot(t, track[:, 4], 'm', label="N*")
plt.plot(t, track[:, 5], 'y', label="NH2*")
plt.xscale('symlog')    
plt.legend(loc='best')    
plt.xlabel('t')    
plt.show()